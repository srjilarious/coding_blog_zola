<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Walk N&#x27; Squawk - Verilog</title>
    <subtitle>A Zig and Elixir Coding Blog, with some FPGA and Japanese content as well.</subtitle>
    <link rel="self" type="application/atom+xml" href="https://www.walknsqualk.com/tags/verilog/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://www.walknsqualk.com/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2023-04-23T00:00:00+00:00</updated>
    <id>https://www.walknsqualk.com/tags/verilog/atom.xml</id>
    <entry xml:lang="en">
        <title>FPGA design for Software Engineers, part 4 - Multiplexed Seven Segment Displays</title>
        <published>2023-04-23T00:00:00+00:00</published>
        <updated>2023-04-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://www.walknsqualk.com/022-shift-reg-multiplex/"/>
        <id>https://www.walknsqualk.com/022-shift-reg-multiplex/</id>
        
        <summary type="html">&lt;p&gt;This time we&#x27;ll continue from the &lt;a href=&quot;https:&#x2F;&#x2F;www.walknsqualk.com&#x2F;016-fpga-start3&#x2F;&quot;&gt;last design article&lt;&#x2F;a&gt; and add in the ability to drive multiple seven segment displays.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>FPGA Design for Software Engineers, Part 3 - Seven Segment Displays</title>
        <published>2020-04-20T00:00:00+00:00</published>
        <updated>2020-04-20T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://www.walknsqualk.com/016-fpga-start3/"/>
        <id>https://www.walknsqualk.com/016-fpga-start3/</id>
        
        <summary type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.walknsqualk.com&#x2F;015-fpga-start2&#x2F;&quot;&gt;Last time&lt;&#x2F;a&gt; we took a break from Verilog and hardware design to improve our build system.  This time we&#x27;re back to Verilog and for our next FPGA project we&#x27;ll create a seven segment driver circuit that will allow us to output hex characters to a single display.&lt;&#x2F;p&gt;
&lt;p&gt;A seven segment display is a set of LEDs arranged like an eight plus a decimal point like you see on cheap alarm clocks and the like.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>FPGA Design for Software Engineers, Part 1 - Verilog and State Machines</title>
        <published>2019-10-16T00:00:00+00:00</published>
        <updated>2019-10-16T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://www.walknsqualk.com/014-fpga-start/"/>
        <id>https://www.walknsqualk.com/014-fpga-start/</id>
        
        <summary type="html">&lt;p&gt;Over the last few years I&#x27;ve gotten more interested in electronics and FPGA design.  I&#x27;ve also noticed that a lot of other software folks seem interested in doing the same, but often don&#x27;t know where to start.  So, I think I have some interesting advice for software engineers that feel like dipping their toes into the hardware world from the point of view of a software engineer.&lt;&#x2F;p&gt;
&lt;p&gt;In this post I&#x27;ll go over FPGAs in general, the basics of the Verilog language, simulating a design and deploying it to an inexpensive TinyFPGA-BX board.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
</feed>
